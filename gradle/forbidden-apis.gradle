def shouldForbiddenApis = !project.hasProperty('no-forbidden-apis')

if (shouldForbiddenApis) {
    allprojects { proj ->
        plugins.withType(JavaLibraryPlugin) {
            proj.apply plugin: 'de.thetaphi.forbiddenapis'
            proj.forbiddenApis {
                signaturesFiles = files("$publicDir/etc/forbidden-apis")
                ignoreSignaturesOfMissingClasses = true
                suppressAnnotations = ["org.neo4j.graphalgo.annotation.SuppressForbidden"]
            }
            proj.tasks.matching { it.name.startsWith('forbiddenApis') }.each {
                tasks.check.dependsOn it
            }
            proj.forbiddenApisMain {
                signaturesFiles = files("$publicDir/etc/forbidden-apis-main")
                bundledSignatures += 'jdk-unsafe'
                bundledSignatures += 'jdk-system-out'
            }
        }
    }
}
