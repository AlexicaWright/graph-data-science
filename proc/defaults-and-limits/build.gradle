apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Procedures :: Defaults and Limits'

group = 'org.neo4j.gds'

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly group: 'org.neo4j', name: 'neo4j-procedure-api', version: ver.neo4j

    implementation project(':core')
    implementation project(':defaults-and-limits-configuration')
    implementation project(':transaction')
    implementation project(':string-formatting')

    // do we have to do the loop because compat layers maybe?
    compileOnly(group: 'org.neo4j', name: 'neo4j-kernel-api', version: ver.'neo4j') { transitive = false }

    // yeah so Gradle compileOnly very intuitively does _not_ make the dependency available for tests...
    testImplementation(group: 'org.neo4j', name: 'neo4j-kernel-api', version: ver.'neo4j') { transitive = false }

    testImplementation project(':test-utils')

    testImplementation group: 'org.assertj', name: 'assertj-core', version: ver.'assertj'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: ver.'junit5'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: ver.'junit5'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: ver.'mockito'
}
