
allprojects { proj ->

    plugins.withType(JavaLibraryPlugin) {
        proj.apply plugin: "com.diffplug.spotless"
        proj.spotless {
            // optional: limit format enforcement to just the files changed by this feature branch
//            ratchetFrom 'origin/master'

//            format 'misc', {
//                // define the files to apply `misc` to
//                target '*.gradle', '*.md', '.gitignore'
//
//                // define the steps to apply to those files
//                trimTrailingWhitespace()
//                indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
//                endWithNewline()
//            }
            java {
                importOrder()

                removeUnusedImports()

                palantirJavaFormat()

                formatAnnotations()

                def projectDirectoryPath = proj.getProjectDir().getPath()
                def sourceFileHeader = null
                if (projectDirectoryPath.contains('private')) {
                    sourceFileHeader = rootProject.file("private/etc/licenses/neo4j-source-header.txt")
                } else if (projectDirectoryPath.contains('public')) {
                    sourceFileHeader = rootProject.file("$publicDir/etc/licenses/headers/source-header.txt")
                } else {
                    throw new RuntimeException("Project must be either private or public, but it was $projectDirectoryPath")
                }
                licenseHeaderFile sourceFileHeader
            }
        }
    }

}
