apply plugin: 'java-library'
apply plugin: 'nebula.info-broker'
apply plugin: 'nebula.info-props'
apply plugin: 'nebula.info-basic'
apply plugin: 'nebula.info-java'
apply plugin: 'nebula.info-scm'

description = 'Neo4j Graph Data Science :: Procedures :: Common'
dependencies {
    annotationProcessor project(':annotations')

    annotationProcessor group: 'org.immutables',           name: 'builder',            version: ver.'immutables'
    annotationProcessor group: 'org.immutables',           name: 'value',              version: ver.'immutables'

    api(project(':algo'))

    implementation project(':annotations')
    implementation project(':algo-common')
    implementation project(':memory-usage')
    implementation project(':neo4j-adapter')
    implementation project(':pregel')

    compileOnly group: 'org.immutables', name: 'value-annotations', version: ver.'immutables'
    compileOnly group: 'org.jetbrains',  name: 'annotations',       version: ver.'jetbrains-annotations'
    (neodeps + ['neo4j-unsafe']).each {
        compileOnly(group: 'org.neo4j', name: it, version: ver.'neo4j') {
            transitive = false
        }
    }

    testAnnotationProcessor project(':annotations')

    testImplementation project(':proc-test')
    testCompileOnly group: 'org.immutables', name: 'value-annotations', version: ver.'immutables'
    testCompileOnly group: 'org.immutables', name: 'builder',           version: ver.'immutables'
    testCompileOnly group: 'org.jetbrains',  name: 'annotations',       version: ver.'jetbrains-annotations'
}

// configure the keys that will be written to the info.properties file
infoBroker {
    includedManifestProperties = [
        'Build-Date',
        'Build-Java-Version',
        'Created-By',
        'Full-Change',
        'Implementation-Version',
        'X-Compile-Target-JDK',
    ]
}

// write the info.properties file on classes
task('processVersionResources', type: Copy, dependsOn: processResources) {
    into project.sourceSets.main.output.resourcesDir
    from(writeManifestProperties) {
        rename { "info.properties" }
        into "META-INF"
    }
}
tasks.writeManifestProperties.outputs.upToDateWhen { false }
classes.dependsOn(processVersionResources)
